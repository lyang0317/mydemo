package action;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.util.List;
import java.util.Map;

import javax.annotation.Resource;
import javax.servlet.ServletContext;
import javax.servlet.http.HttpServletRequest;

import org.apache.struts2.ServletActionContext;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;
import org.springframework.stereotype.Controller;

import com.opensymphony.xwork2.ActionContext;

import entity.Singer;
import service.imp.SingerServiceImp;
import utils.Common;
import utils.Support;


@Component("singerAction")
public class SingerAction {
	@Resource
	private SingerServiceImp singerServiceIMP ;
	//新增歌手
	private Singer singer;
	private String url;
	public String getUrl() {
		return url;
	}
	public void setUrl(String url) {
		this.url = url;
	}
	public Singer getSinger() {
		return singer;
	}
	public void setSinger(Singer singer) {
		this.singer = singer;
	}
	
	private String location="/images";
	private File upload;
	private String uploadFileName;
	
	public String getLocation() {
		return location;
	}
	public void setLocation(String location) {
		this.location = location;
	}
	public File getUpload() {
		return upload;
	}
	public void setUpload(File upload) {
		this.upload = upload;
	}
	public String getUploadFileName() {
		return uploadFileName;
	}
	public void setUploadFileName(String uploadFileName) {
		this.uploadFileName = uploadFileName;
	}
	
	
	public String addSinger() throws IOException{
		System.out.println(singer.getName());
		HttpServletRequest request = ServletActionContext.getRequest();
		ServletContext application = request.getServletContext();
		String realpath = application.getRealPath(location);
		File file = new File(realpath);
		System.out.println(realpath);
		if(!file.exists()){
			file.mkdirs();
		}
		FileInputStream is = new FileInputStream(upload);
		FileOutputStream os = new FileOutputStream(realpath+"\\"+uploadFileName);
		byte [] b= new byte[1024];
		int len = is.read(b);
		while(len!=-1){
			os.write(b, 0, len);
			len = is.read(b);
		}
		is.close();
		os.close();
		singer.setPic_url("images"+"/"+uploadFileName);
		singerServiceIMP.addSinger(singer);
		url = "sys/singer/index.jsp";
		return "ok";
	}
	//分页查询歌手 
	private int nowpage;
	public int getNowpage() {
		return nowpage;
	}
	public void setNowpage(int nowpage) {
		this.nowpage = nowpage;
	}
	public String getSingerByPage(){
		System.out.println(nowpage);
		Support spt = singerServiceIMP.querySingerByPage(nowpage);
		long totalPage = (spt.getTotalRecord()+Common.PageSize-1)/Common.PageSize;
		spt.setTotalPage(totalPage);
		Map request = (Map)ActionContext.getContext().get("request");
		request.put("singers", spt);
		url = "sys/singer/index.jsp";
		return "ok";
	}
	//查询所有歌手
	private List<Singer> singers;
	public List<Singer> getSingers() {
		return singers;
	}
	public void setSingers(List<Singer> singers) {
		this.singers = singers;
	}
	public String allSinger(){
		 singers = singerServiceIMP.allSingers();
		 url = "sys/singer/index.jsp";
		return "ok";
	}
}
